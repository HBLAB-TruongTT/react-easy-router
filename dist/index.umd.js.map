{"version":3,"file":"index.umd.js","sources":["../src/Store.js","../src/components/Loader.js","../src/components/Protected.js","../src/utils/elementParser.js","../src/utils/getRoutes.js","../src/utils/pathParser.js","../src/components/Router.js"],"sourcesContent":["/**\n * Store using context api\n * @author Yousuf Kalim\n */\nimport React, { useContext, useState, createContext } from 'react';\n\n// Initializing Create Context Hook\nconst authContext = createContext();\nconst configContext = createContext();\n\n// We are also initializing useContexts here\n// we only call these functions where we need that data\nexport function Auth() {\n  return useContext(authContext);\n}\n\nexport function Config() {\n  return useContext(configContext);\n}\n\n/**\n * Store Provider with the config provided by the user\n * @param isAuthenticated Function to check if the user is authenticated\n * @param showLoader Boolean to show the loader\n * @param loader Image to show as the loader\n * @param children Children of the component\n * @returns {JSX.Element}\n * @constructor StoreProvider\n */\n// Initializing Store Provider\n// eslint-disable-next-line react/prop-types\nexport function StoreProvider({ isAuthenticated, showLoader = true, loader, children }) {\n  // Initializing State\n  const [auth, setAuth] = useState(null);\n  const [config] = useState({\n    isAuthenticated,\n    showLoader,\n    loader,\n  });\n\n  // Render\n  return (\n    <authContext.Provider value={{ auth, setAuth }}>\n      <configContext.Provider value={{ config }}>{children}</configContext.Provider>\n    </authContext.Provider>\n  );\n}\n","/**\n * Loader component\n * @author Yousuf Kalim\n */\nimport { Config } from '../Store';\n\n/**\n * Loader\n * @returns {JSX.Element}\n * @constructor Loader\n */\nfunction Loader() {\n  const { config } = Config(); // Get the config from the store\n\n  return (\n    <div\n      className=\"loader\"\n      style={{\n        height: '100vh',\n        width: '100%',\n        backgroundColor: 'white',\n        position: 'absolute',\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {/* If user has provided the custom loader then show, otherwise show default */}\n      <img src={config.loader || 'https://i.imgur.com/FhvNntt.gif'} alt=\"loader\" />\n    </div>\n  );\n}\nexport default Loader;\n","/**\n * Protected component to check if the user is authenticated or not and then render the component\n * @author Yousuf Kalim\n */\nimport React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Auth, Config } from '../Store';\nimport Loader from './Loader';\n\n/**\n * Protected\n * @param failureRedirect {string} - The path to redirect if the user is not authenticated\n * @param children {ReactNode} - The component to render if the user is authenticated\n * @returns {JSX.Element}\n */\nfunction Protected({ failureRedirect = '/', children }) {\n  const { auth, setAuth } = Auth(); // Get the auth state from the store\n  const {\n    config: { isAuthenticated, showLoader },\n  } = Config(); // Get the config from the store\n\n  useEffect(() => {\n    // Check if the user is authenticated or not\n    if (isAuthenticated) {\n      isAuthenticated()\n        .then((res) => {\n          // If the user is authenticated then set the auth state to true\n          setAuth(res);\n        })\n        .catch(() => setAuth(false)); // If the user is not authenticated then set the auth state to false\n    } else {\n      setAuth(false);\n    }\n  }, [isAuthenticated, setAuth]);\n\n  // eslint-disable-next-line no-nested-ternary\n  return auth === null ? ( // If the auth state is null then show the loader\n    showLoader && <Loader />\n  ) : auth ? ( // If the auth state is true then render the children\n    children\n  ) : (\n    // If the auth state is false then redirect to the failureRedirect path\n    <Navigate to={failureRedirect} />\n  );\n}\n\nexport default Protected;\n","/**\n * Parse the routes according to the config provided\n * @author Yousuf Kalim\n */\nimport { Route, Navigate } from 'react-router-dom';\nimport Protected from '../components/Protected';\n\n/**\n * elementParser\n * @param route {Object} - Route object\n * @returns {JSX.Element} - Route element\n */\nexport default function elementParser(route) {\n  // Navigated route\n  if (route.navigate) {\n    return <Route key={route.path} path={route.path} element={<Navigate to={route.navigate} />} />;\n  }\n\n  // Protected route\n  if (route.protected) {\n    // This will call the protected component and pass the route as props\n    return (\n      <Route\n        key={route.path}\n        path={route.path}\n        element={<Protected failureRedirect={route.failureRedirect}>{route.element}</Protected>}\n      />\n    );\n  }\n\n  // Simple route\n  return <Route key={route.path} path={route.path} element={route.element} />;\n}\n","/**\n * Parse the routes from the config file\n * @author Yousuf Kalim\n */\nimport pathParser from './pathParser';\nimport elementParser from './elementParser';\n\n/**\n * getRoutes\n * @param routes {Array} - Array of routes\n * @param parentPath {String} - Parent path\n * @returns {*} - Array of rendered routes\n */\nexport default function getRoutes(routes, parentPath = '') {\n  // Loop through the routes and create the route elements\n  const renderedRoutes = routes.map((route) => {\n    // eslint-disable-next-line no-param-reassign\n    route.path = pathParser(parentPath, route.path); // This will create the path by appending parent path if exist\n\n    let children = [];\n    if (route.children) {\n      // Recursively call the function to get the children routes\n      children = getRoutes(route.children, route.path);\n    }\n\n    // Create the route element using the element parser\n    return [...children, elementParser(route)];\n  });\n\n  // Return the flatten array of routes and children\n  return renderedRoutes.flat();\n}\n","/**\n * Appending the child path to the parent path\n * @author Yousuf Kalim\n */\n\n/**\n * pathParser\n * @param parent {String} - Parent path\n * @param child {String} - Child path\n * @returns {string|string} - Path\n */\nexport default function pathParser(parent, child) {\n  const parentPath = parent.split('/');\n  const childPath = child.split('/');\n\n  // removing the duplicates\n  const path = [...new Set([...parentPath, ...childPath])].join('/');\n\n  // Add the slash at the start of the path\n  return path[0] === '/' ? path : `/${path}`;\n}\n","/**\n * Main router component that handles the routing of the application\n * @author Yousuf Kalim\n */\nimport React from 'react';\nimport { Routes } from 'react-router-dom';\nimport { StoreProvider } from '../Store';\nimport getRoutes from '../utils/getRoutes';\n\n/**\n * Router\n * @param props Props passed to the component\n * @returns {JSX.Element}\n * @constructor Router\n */\nexport default function Router(props) {\n  return (\n    <StoreProvider {...props}>\n      <Routes>{getRoutes(props.routes)}</Routes>\n    </StoreProvider>\n  );\n}\n"],"names":["authContext","createContext","configContext","Config","useContext","StoreProvider","_ref","isAuthenticated","_ref$showLoader","showLoader","loader","children","_useState","useState","auth","setAuth","_useState2","_jsx","Provider","value","config","Loader","className","style","height","width","backgroundColor","position","zIndex","display","justifyContent","alignItems","src","alt","Protected","_ref$failureRedirect","failureRedirect","_Auth","_Config$config","useEffect","then","res","catch","jsx","Navigate","to","elementParser","route","Route","navigate","path","element","protected","routes","parentPath","map","parent","child","split","childPath","concat","Set","join","pathParser","getRoutes","renderedRoutes","flat","props","Routes"],"mappings":"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"}